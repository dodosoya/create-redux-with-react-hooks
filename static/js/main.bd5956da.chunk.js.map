{"version":3,"sources":["contexts/DispatchContext.js","actions/filterActions.js","actions/todoActions.js","reducers/filterReducer.js","reducers/todoReducer.js","components/Filter/index.js","components/TodoItem/index.js","components/TodoList/index.js","components/AddTodo/index.js","App.js","reportWebVitals.js","index.js"],"names":["DispatchContext","createContext","filterActions","SHOW_ALL","SHOW_COMPLETE","SHOW_INCOMPLETE","todoActions","DO_TODO","UNDO_TODO","ADD_TODO","filterReducer","state","action","type","todoReducer","map","todo","id","complete","concat","task","Filter","useContext","dispatch","filter","onClick","style","color","TodoItem","checked","onChange","TodoList","todos","AddTodo","useState","setTask","onSubmit","event","uuidv4","preventDefault","value","target","initialTodos","App","useCombinedReducers","useReducer","filteredTodos","Provider","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd5956da.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst DispatchContext = createContext(null);\n\nexport default DispatchContext;\n","const filterActions = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETE: 'SHOW_COMPLETE',\n  SHOW_INCOMPLETE: 'SHOW_INCOMPLETE'\n};\n\nexport default filterActions;\n","const todoActions = {\n  DO_TODO: 'DO_TODO',\n  UNDO_TODO: 'UNDO_TODO',\n  ADD_TODO: 'ADD_TODO'\n};\n\nexport default todoActions;\n","import { filterActions } from '../actions';\n\nconst filterReducer = (state, action) => {\n  switch (action.type) {\n    case filterActions.SHOW_ALL:\n      return 'ALL';\n    case filterActions.SHOW_COMPLETE:\n      return 'COMPLETE';\n    case filterActions.SHOW_INCOMPLETE:\n      return 'INCOMPLETE';\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { todoActions } from '../actions';\n\nconst todoReducer = (state, action) => {\n  switch (action.type) {\n    case todoActions.DO_TODO:\n      return state.map(todo => {\n        if (todo.id === action.id) {\n          return { ...todo, complete: true };\n        } else {\n          return todo;\n        }\n      });\n    case todoActions.UNDO_TODO:\n      return state.map(todo => {\n        if (todo.id === action.id) {\n          return { ...todo, complete: false };\n        } else {\n          return todo;\n        }\n      });\n    case todoActions.ADD_TODO:\n      return state.concat({\n        task: action.task,\n        id: action.id,\n        complete: false,\n      });\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n","import React, { useContext } from 'react';\nimport { DispatchContext } from '../../contexts';\nimport { filterActions } from '../../actions';\n\nconst Filter = () => {\n  const { state, dispatch } = useContext(DispatchContext);\n  const { filter } = state;\n\n  const handleShowAll = () => {\n    dispatch({ type: filterActions.SHOW_ALL });\n  };\n\n  const handleShowComplete = () => {\n    dispatch({ type: filterActions.SHOW_COMPLETE });\n  };\n\n  const handleShowIncomplete = () => {\n    dispatch({ type: filterActions.SHOW_INCOMPLETE });\n  };\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleShowAll} style={{ color : filter === 'ALL' ? 'red' : 'black' }}>\n        Show All\n      </button>\n      <button type=\"button\" onClick={handleShowComplete} style={{ color : filter === 'COMPLETE' ? 'red' : 'black' }}>\n        Show Complete\n      </button>\n      <button type=\"button\" onClick={handleShowIncomplete} style={{ color : filter === 'INCOMPLETE' ? 'red' : 'black' }}>\n        Show Incomplete\n      </button>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useContext } from 'react';\nimport { DispatchContext } from '../../contexts';\nimport { todoActions } from '../../actions';\n\nconst TodoItem = ({ todo }) => {\n  const { dispatch } = useContext(DispatchContext);\n\n  const handleChange = () =>\n    dispatch({\n      type: todo.complete ? todoActions.UNDO_TODO : todoActions.DO_TODO,\n      id: todo.id,\n    });\n\n  return (\n    <li>\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={todo.complete}\n          onChange={handleChange}\n        />\n        {todo.task}\n      </label>\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from '../TodoItem';\n\nconst TodoList = ({ todos }) => (\n  <ul>\n    {todos.map(todo => (\n      <TodoItem key={todo.id} todo={todo} />\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import React, { useContext, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DispatchContext } from '../../contexts';\nimport { todoActions } from '../../actions';\n\nconst AddTodo = () => {\n  const { dispatch } = useContext(DispatchContext);\n  const [task, setTask] = useState('');\n\n  const handleSubmit = event => {\n    if (task) {\n      dispatch({ type: todoActions.ADD_TODO, task, id: uuidv4() });\n    }\n\n    setTask('');\n    event.preventDefault();\n  };\n\n  const handleChange = event => setTask(event.target.value);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={task} onChange={handleChange} />\n      <button type=\"submit\">Add Todo</button>\n    </form>\n  );\n};\n\nexport default AddTodo;\n","import React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DispatchContext } from './contexts';\nimport { filterReducer, todoReducer } from './reducers';\nimport useCombinedReducers from 'use-combined-reducers';\nimport Filter from './components/Filter';\nimport TodoList from './components/TodoList';\nimport AddTodo from './components/AddTodo';\n\nconst initialFilter = 'ALL';\nconst initialTodos = [\n  {\n    id: uuidv4(),\n    task: 'Learn React',\n    complete: true,\n  },\n  {\n    id: uuidv4(),\n    task: 'Learn Firebase',\n    complete: true,\n  },\n  {\n    id: uuidv4(),\n    task: 'Learn GraphQL',\n    complete: false,\n  },\n];\n\nfunction App() {\n  const [state, dispatch] = useCombinedReducers({\n    filter: useReducer(filterReducer, initialFilter),\n    todos: useReducer(todoReducer, initialTodos),\n  });\n\n  const { filter, todos } = state;\n  const filteredTodos = todos.filter(todo => {\n    if (filter === 'ALL') {\n      return true;\n    }\n    if (filter === 'COMPLETE' && todo.complete) {\n      return true;\n    }\n    if (filter === 'INCOMPLETE' && !todo.complete) {\n      return true;\n    }\n\n    return false;\n  });\n\n  return (\n    <DispatchContext.Provider value={{ state, dispatch }}>\n      <div style={{ padding: '10px' }}>\n        <AddTodo />\n        <TodoList todos={filteredTodos} />\n        <Filter />\n      </div>\n    </DispatchContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}